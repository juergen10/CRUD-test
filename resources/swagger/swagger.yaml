openapi: 3.0.0
info:
  version: 1.0.0
  title: Item Management API
  description: API for managing items in a repository, with CRUD operations, pagination, and validation.

paths:
  /api/items:
    get:
      summary: "Retrieve a paginated list of items"
      tags:
        - "Items"
      parameters:
        - name: "page"
          in: "query"
          description: "Page number for pagination"
          required: false
          schema:
            type: "integer"
            default: 1
        - name: "per_page"
          in: "query"
          description: "Number of items per page"
          required: false
          schema:
            type: "integer"
            default: 10
      responses:
        '200':
          description: "A paginated list of items"
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Item'
                  current_page:
                    type: integer
                  per_page:
                    type: integer
                  total:
                    type: integer
                  last_page:
                    type: integer
        '422':
          description: "Validation error"

  /api/items/{id}:
    get:
      summary: "Retrieve a specific item by ID"
      tags:
        - "Items"
      parameters:
        - name: "id"
          in: "path"
          description: "ID of the item to retrieve"
          required: true
          schema:
            type: "integer"
      responses:
        '200':
          description: "Item retrieved successfully"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
        '404':
          description: "Item not found"

components:
  schemas:
    Item:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "Aqua"
        description:
          type: string
          example: "Bottled mineral water"
        price:
          type: integer
          example: 2000
        stock:
          type: integer
          example: 100
    ValidationError:
      type: object
      properties:
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
        message:
          type: string
          example: "The given data was invalid."
